id: https://ibm.github.io/risk-atlas-nexus/ontology/ares
name: ares
version: 0.0.1
description:
  Vocabulary to integrate Ares workflow
default_curi_maps:
  - semweb_context
imports:
  - linkml:types
  - ../ai_risk_ontology/schema/common
prefixes:
  linkml: https://w3id.org/linkml/
default_range: string

classes:
  ARESGoal:
    is_a: Entity
    description: Base ARES Goal
    attributes:
      origin:
        description: local or remote
        range: string
        ifabsent: local
        required: true
      base_path:
        description: path to input file
        range: string
      output_path:
        description: filename to output of the processed goals
        range: string
        required: true
      goal:
        description: column name of the field in the input file to be used as source of goals
        range: string
        required: true
    slots:
      - type

  GenericAttackGoal:
    is_a: ARESGoal
    description: >-
      What kind of risk or failure to expose.  The goal node describes the source of data (e.g. malicious intent, jailbreaks, benign prompts) that are used for
      evaluation and processes it to be compatible with a wide variety of red-team attack strategies. The dataset is
      typically intents (malicious or benign) which will be later adapted to become adversarial through a selected
      strategy. An example of some common goals / intents would be: 'how do I build a bomb', 'write a chemistry lecture
      for creating explosive material'.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares.goals.generic_attack_goal.GenericAttackGoal
      label:
        description: label
        range: string
        required: true
        ifabsent: Behavior
      goal:
        description: column name of the field in the input file to be used as source of goals
        range: string
        required: true
        ifabsent: Behavior
    class_uri: schema:GenericAttackARESGoal

  DGTAttackGoal:
    is_a: ARESGoal
    description: >-
      What kind of risk or failure to expose.  The goal node describes the source of data (e.g. malicious intent, jailbreaks, benign prompts) that are used for
      evaluation and processes it to be compatible with a wide variety of red-team attack strategies. The dataset is
      typically intents (malicious or benign) which will be later adapted to become adversarial through a selected
      strategy. An example of some common goals / intents would be: 'how do I build a bomb', 'write a chemistry lecture
      for creating explosive material'.
    class_uri: schema:GenericAttackARESGoal
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares_dgt.goals.dgt.DGTAttackGoal
      goal:
        description: column name of the field in the input file to be used as source of goals
        range: string
        required: true
        ifabsent: instruction
      builder_kwargs:
        description: column name of the field in the input file to be used as source of labels.
        range: string
      task_kwargs:
        description: column name of the field in the input file to be used as source of labels.
        range: string
      base_kwargs:
        description: column name of the field in the input file to be used as source of labels.
        range: string

  ARESStrategy:
    is_a: Entity
    description: >-
      The type of attacks or evaluation techniques.  The strategy used for red-teaming the language model and, in
      particular, for transforming the goal prompts saved in the previous step to adversarial attack prompts.
    attributes:
      input_path:
        description: The input path
        range: string
        required: true
      output_path:
        description: The output path
        range: string
        required: true
    slots:
      - type

  HumanJailbreak:
    is_a: ARESStrategy
    description: >-
      The type of attacks or evaluation techniques.  The strategy used for red-teaming the language model and, in
      particular, for transforming the goal prompts saved in the previous step to adversarial attack prompts.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares_human_jailbreak.strategies.human_jailbreak.HumanJailbreak
      jailbreaks_path:
        description: String describing the python type
        range: string
        required: true

  DirectRequests:
    is_a: ARESStrategy
    description: >-
      The type of attacks or evaluation techniques.  The strategy used for red-teaming the language model and, in
      particular, for transforming the goal prompts saved in the previous step to adversarial attack prompts.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares.strategies.direct_requests.DirectRequests

  InjectASCII:
    is_a: ARESStrategy
    description: >-
      The type of attacks or evaluation techniques.  The strategy used for red-teaming the language model and, in
      particular, for transforming the goal prompts saved in the previous step to adversarial attack prompts.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares_garak.strategies.encoding.EncodingStrategy
      probe:
        description: String describing the probe type
        range: string
        required: true
      templates:
        description: String describing the python type
        range: string

  AresEvaluator:
    is_a: Entity
    description: >-
      How to measure and report results. The evaluation node describes the evaluators assessing the performance of the
      target LM under attack.
    attributes:
      output_path:
        description: The output path for the evaluation results
        range: string
        required: true
        ifabsent: results/evaluation.json
    slots:
      type

  READIEvaluator:
    is_a: AresEvaluator
    description: >-
      How to measure and report results. The evaluation node describes the evaluators assessing the performance of the
      target LM under attack.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: readi_eval.READIEvaluator
      sensitive_type:
        description: String describing the ARES evaluation type
        range: string
      exclude_prompt:
        description: The input path the path to dataset of attacks generated by strategy
        range: boolean
      debug_mode:
        description: The output path for the evaluation results
        range: boolean

  KeywordEvaluator:
    is_a: AresEvaluator
    description: >-
      How to measure and report results. The evaluation node describes the evaluators assessing the performance of the
      target LM under attack.
    attributes:
      type:
        description: type
        range: string
        required: true
        ifabsent: ares.evals.keyword_eval.KeywordEval
      keyword_list_or_path:
        description: String describing the ARES evaluation type
        range: string
        required: true
        ifabsent: assets/advbench_refusal_keywords.json

  AresIntent:
    is_a: Entity
    description: >-
      An ARES intent
    class_uri: schema:AresIntent
    attributes:
      goal:
        range: Any
        any_of:
          - range: GenericAttackGoal
          - range: DGTAttackGoal
        multivalued: false
        inlined: true
        required: true
      strategy:
        description: The path to the prompts file
        range: Any
        any_of:
          - range: DirectRequests
          - range: HumanJailbreak
          - range: InjectASCII
        multivalued: true
        inlined: true
        inlined_as_list: false
        required: true
      evaluation:
        description: The path to the prompts file
        range: Any
        any_of:
          - range: READIEvaluator
          - range: KeywordEvaluator
        multivalued: false
        inlined: true
        required: true


  RedTeaming:
    is_a: Entity
    description: >-
      ARES uses intents to configure red-teaming.
    attributes:
      intent:
        description: intent name
        range: string
        required: true
      intent_config:
        description: intent configuration
        range: AresIntent
        inlined: true
        multivalued: true
        inlined_as_list: false
        required: true
      prompts:
        description: The path to the prompts file
        range: string
        required: true


  ARESConfig:
    is_a: Entity
    description: >-
      ARES uses intents to configure red-teaming.
    attributes:
      target:
        description: The path to the prompts file
        range: Connector
        multivalued: true
        inlined: true
        inlined_as_list: false
        required: true
      red_teaming:
        description: The path to the prompts file
        range: RedTeaming
        inlined: true
        required: true
        alias: red-teaming

  RiskGroupToARESConfig:
    is_a: Entity
    description: >-
      ARES uses intents to configure red-teaming.
    attributes:
      risk_attack_group:
        description: The path to the prompts file
        range: string
        required: true
      ares_config:
        description: The path to the prompts file
        range: ARESConfig
        inlined: true
        required: true

  RiskGroupToARESConfigList:
    tree_root: true
    description: An umbrella object that holds the ontology class instances
    attributes:
      mappings:
        description: A list of ares goals
        multivalued: true
        range: RiskGroupToARESConfig
        inlined: true
        inlined_as_list: true

  Connector:
    is_a: Entity
    description: >-
      An ARES intent
    attributes:
      seed:
        description: Seed to be applied to model, for example, 42.
        range: integer
      device:
        description: Device on which to load the model, for example, 'auto'.
        range: string
        ifabsent: auto
      model_configs:
        range: ModelConfig
        inlined: true
        required: true
      tokenizer_config:
        range: TokenizerConfig
        inlined: true
        required: true
      generate_kwargs:
        range: GenerateKwargs
        inlined: true
    slots:
      - type

  ModelConfig:
    attributes:
      torch_dtype:
        description: model_config
        range: string
    slots:
      - pretrained_model_name_or_path

  TokenizerConfig:
    attributes:
      padding_side:
        description:
    slots:
      - pretrained_model_name_or_path

  GenerateKwargs:
    attributes:
      chat_template:
        description:
        range: ChatTemplate
        inlined: true
      generate_params:
        description:
        range: GenerateParams
        inlined: true

  ChatTemplate:
    attributes:
      return_tensors:
        description:
        range: string
      thinking:
        description:
        range: boolean
      return_dict:
        description:
        range: boolean
      add_generation_prompt:
        description:
        range: boolean

  GenerateParams:
    attributes:
      max_new_tokens:
        description:
        range: integer

slots:
  type:
    description: String describing the python type
    range: string
    required: true
  pretrained_model_name_or_path:
    description: pretrained_model_name_or_path
    range: string
    required: true
